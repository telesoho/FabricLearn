version: "2.1"

services:
  dns-base:
    extra_hosts:
      - "tlsca.localcoin.jp:192.168.1.9"
      - "ca.orderer.localcoin.jp:192.168.1.9"
      - "ca.sdl.localcoin.jp:192.168.1.9"
      - "orderer0.orderer.localcoin.jp:192.168.1.9"
      - "orderer1.orderer.localcoin.jp:192.168.1.9"
      - "orderer2.orderer.localcoin.jp:192.168.1.9"
      - "peer0.sdl.localcoin.jp:192.168.1.9"
      - "peer1.sdl.localcoin.jp:192.168.1.9"
      - "couchdb.localcoin.jp:192.168.1.9"
      - "files.localcoin.jp:192.168.1.9"

  ca-base:
    image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
    restart: always
    extends:
      service: dns-base
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      # - FABRIC_CA_SERVER_DEBUG=true
    command: sh -c 'fabric-ca-server start --cfg.identities.allowremove --cfg.affiliations.allowremove  -b admin:adminpw -d'

  peer-base:
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    restart: always
    extends:
      service: dns-base
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_PROFILE_ENABLED=true

      # LOGGING SETTINGS
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_CHAINCODE_LOGGING_LEVEL=INFO
      - CORE_LOGGING_MSP=INFO
      - CORE_LOGGING_GRPC=INFO
      - CORE_LOGGING_LEDGER=INFO
      - CORE_LOGGING_GOSSIP=INFO
      - CORE_LOGGING_PEER_GOSSIP=INFO

      # TLS SETTINGS
      - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/peer/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/peer/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/peer/tls/ca.crt
      ## the following setting redirects chaincode container logs to the peer container logs
      - CORE_VM_DOCKER_ATTACHSTDOUT=true

      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=localcoin_net
      # Allow more time for chaincode container to build on install.
      - CORE_CHAINCODE_EXECUTETIMEOUT=400s

      # core.xml file is here
      - FABRIC_CFG_PATH=/var/hyperledger/peer

      # Peer specific variabes
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      # Use CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.localcoin.jp:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock


  orderer-base:
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    extends:
      service: dns-base
    environment:
      # - FABRIC_LOGGING_SPEC=DEBUG
      # - ORDERER_GENERAL_LOGLEVEL=debug
      - FABRIC_CFG_PATH=/var/hyperledger/orderer
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      # - ORDERER_GENERAL_GENESISMETHOD=file
      # - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      # - ORDERER_GENERAL_LOCALMSPID=ordererMSP
      # - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      # - ORDERER_GENERAL_TLS_ENABLED=true
      # - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      # - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      # - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      # - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      # - ORDERER_KAFKA_VERBOSE=true
      # - ORDERER_GENERAL_CLUSTER_LISTENPORT=7150
      # - ORDERER_GENERAL_CLUSTER_LISTENADDRESS=0.0.0.0
      # - ORDERER_GENERAL_CLUSTER_SERVERCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      # - ORDERER_GENERAL_CLUSTER_SERVERPRIVATEKEY=/var/hyperledger/orderer/tls/server.key   
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric

